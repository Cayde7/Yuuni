# logging.basicConfig(level=logging.INFO)
# logger = logging.getLogger('discord')
# logger.setLevel(logging.DEBUG)
# handler = logging.FileHandler(filename='discord.log', encoding='utf-8', mode='w')
# handler.setFormatter(logging.Formatter('%(asctime)s:%(levelname)s:%(name)s: %(message)s'))
# logger.addHandler(handler)
# Site voor invite https://discordapp.com/oauth2/authorize?client_id=522487838361649152&scope=bot&permissions=8

# @commands.command
# async def idiot(self, ctx, userName: discord.Member=None):
#     await ctx.send(userName.mention + " is a Baka")

# @bot.command()
# async def test(ctx, *args):
#     await ctx.send('{} arguments: {}'.format(len(args), ', '.join(args)))


# client = case_insensitive(True)d
# bot.remove_command('help')

# @client.event
# async def on_member_join(member):
#     role = discord.utils.get(member.server.roles, name='Test Crew')
#     await client.add_roles(member, role)

# @client.event
# async def clear(ctx, amount=100):
#     if message.content.upper().startswith('CLEAR'):
#         channel = ctx.message.channel
#         message = []
#         async for message in client.logs_from(channel, limit=int(ammount) + 1):
#             message.append(message)
#         await client.delete_messages(messages)
#         await client.say('Messages is goooone')

# @client.event
# async def on_message_delete(message):
#     await message.channel.send("You cant hide anything from me. {0.author.name}".format(message) + "-senpai!")

# @client.event
# async def on_message(message):
#     if message.author == client.user:
#         return
#
#     if message.content.upper().startswith('HELLO'):
#         if message.author.id == "272014773162344449":
#             await message.channel.send('Hello {0.author.name}'.format(message) + '-sensei')
#         else:
#             await message.channel.send('Hello {0.author.name}'.format(message) + '-senpai')
#
#     if message.content.upper().startswith('GOODNIGHT'):
#         if message.author.id == "272014773162344449":
#             await message.channel.send('Goodnight {0.author.name}'.format(message) + '-sensei')
#         else:
#             await message.channel.send('Goonight {0.author.name}'.format(message) + '-senpai')
#
#     if message.content.upper().startswith('OHAYO'):
#         if message.author.id == "272014773162344449":
#             await message.channel.send('Ohayo {0.author.name}'.format(message) + '-sensei')
#         else:
#             await message.channel.send('Ohayo {0.author.name}'.format(message) + '-senpai')
#
#     if message.content.upper().startswith('I LOVE YOU YUUNI'):
#         if message.author.id == "272014773162344449":
#             await message.channel.send('I love you more then anyone else {0.author.name}'.format(message) + '-sensei :heart_eyes:')
#         else:
#             await message.channel.send('I love you too {0.author.name}'.format(message) + '-senpai')
#
#     if message.content.upper().startswith('!PING'):
#         userName = message.author.name
#         await message.channel.send("%s Pong!" % (userName))
#
#     if message.content.upper().startswith('!PONG'):
#         userName = message.author.name
#         await message.channel.send("%s Ping!" % (userName))
#
#     if message.content.upper().startswith('!SAY'):
#         args = message.content.split(" ")
#         await message.channel.send("%s" % (" ").join(args[1:]))

# async def help(ctx):
#     author = ctx.message.author
#     embed = discord.Embed(
#         color = discord.Colour.Hotpink()
#     )
#     embed.set_author(name='Help')
#     embed.add_field(name='!Ping', value='Returns Pong!', inline=True)
#     await message.channel.send(author, embed=embed)

    # if message.conctent.upper().startswith('LOOKFORID'):
    #     userID = message.author.id
    #     await message.channel.send("Your id is <%s>" % (userID))

    import discord
    from discord.ext import commands
    import random

    description = '''An example bot to showcase the discord.ext.commands extension
    module.
    There are a number of utility commands being showcased here.'''
    bot = commands.Bot(command_prefix='', description=description)
    Token = 'NTIyNDg3ODM4MzYxNjQ5MTUy.DvOjOQ.fS1ib9x8gyQ-4kan_LAZBE-bDgA'

    @client.event
    class MyClient(discord.Client):
        async def on_ready(self):
            print('Logged in as')
            print(self.user.name)
            print(self.user.id)
            print('------')

    @bot.event
    async def on_member_join(self, member):
        guild = member.guild
        if guild.system_channel is not None:
            to_send = 'Welcome {0.mention} to {1.name}!'.format(member, guild)
            await guild.system_channel.send(to_send)

    @bot.command()
    async def add(ctx, left: int, right: int):
        """Adds two numbers together."""
        await ctx.send(left + right)

    @client.event
    async def on_message(message):
        if message.content.startswith('$thumb'):
            channel = message.channel
            await channel.send('Send me that üëç reaction, mate')

            def check(reaction, user):
                return user == message.author and str(reaction.emoji) == 'üëç'

            try:
                reaction, user = await client.wait_for('reaction_add', timeout=60.0, check=check)
            except asyncio.TimeoutError:
                await channel.send('üëé')
            else:
                await channel.send('üëç')

    @bot.command(description='For when you wanna settle the score some other way')
    async def choose(ctx, *choices: str):
        """Chooses between multiple choices."""
        await ctx.send(random.choice(choices))

    @bot.command()
    async def joined(ctx, member: discord.Member):
        """Says when a member joined."""
        await ctx.send('{0.name} joined in {0.joined_at}'.format(member))

    @bot.group()
    async def cool(ctx):
        """Says if a user is cool.
        In reality this just checks if a subcommand is being invoked.
        """
        if ctx.invoked_subcommand is None:
            await ctx.send('No, {0.subcommand_passed} is not cool'.format(ctx))

    @cool.command(name='Yuuni')
    async def _bot(ctx):
        """Is the bot cool?"""
        await ctx.send('Yes, Yuuni is cool.')
    @cool.command(name='Cayde')
    async def _Cayde(ctx):
        """Is the bot cool?"""
        await ctx.send('Yes, the Cayde is cool.')

    client = MyClient()
    bot.run(Token)
    client.run(Token)
